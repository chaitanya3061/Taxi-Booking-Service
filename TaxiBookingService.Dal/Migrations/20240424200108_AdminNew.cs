using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace TaxiBookingService.Dal.Migrations
{
    /// <inheritdoc />
    public partial class AdminNew : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "User",
                keyColumn: "Id",
                keyValue: 100,
                columns: new[] { "CreatedAt", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2024, 4, 24, 20, 1, 8, 492, DateTimeKind.Utc).AddTicks(1793), new byte[] { 72, 175, 96, 180, 53, 231, 10, 5, 51, 159, 72, 194, 7, 138, 9, 79, 72, 52, 86, 169, 189, 56, 134, 0, 144, 8, 171, 60, 190, 70, 151, 30, 54, 140, 93, 93, 59, 98, 205, 75, 19, 148, 64, 138, 246, 69, 52, 77, 193, 29, 197, 190, 77, 59, 213, 38, 108, 212, 157, 245, 33, 236, 227, 154 }, new byte[] { 238, 191, 185, 210, 246, 19, 145, 136, 41, 182, 58, 100, 149, 8, 248, 138, 35, 54, 149, 120, 173, 247, 210, 212, 29, 135, 144, 27, 178, 155, 207, 85, 90, 183, 165, 29, 211, 90, 80, 158, 217, 13, 213, 178, 136, 2, 46, 229, 240, 164, 245, 17, 136, 66, 138, 155, 33, 8, 16, 182, 132, 7, 23, 177, 15, 192, 84, 27, 3, 242, 218, 35, 225, 130, 48, 44, 33, 114, 142, 227, 136, 237, 219, 133, 129, 111, 104, 218, 63, 27, 124, 83, 62, 234, 221, 9, 16, 3, 214, 167, 88, 10, 96, 22, 60, 208, 79, 197, 15, 223, 107, 221, 32, 207, 54, 101, 116, 91, 166, 198, 11, 150, 48, 107, 96, 248, 58, 56 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "User",
                keyColumn: "Id",
                keyValue: 100,
                columns: new[] { "CreatedAt", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2024, 4, 24, 19, 58, 50, 993, DateTimeKind.Utc).AddTicks(1735), new byte[] { 60, 84, 63, 212, 239, 140, 91, 216, 46, 210, 82, 100, 128, 28, 253, 219, 41, 88, 156, 200, 80, 12, 19, 127, 63, 236, 57, 239, 142, 31, 177, 63, 191, 127, 81, 52, 110, 11, 226, 39, 227, 190, 134, 204, 173, 203, 143, 153, 64, 53, 232, 155, 227, 25, 205, 254, 248, 23, 194, 53, 127, 216, 200, 189 }, new byte[] { 124, 221, 86, 8, 4, 161, 237, 147, 232, 226, 228, 90, 166, 206, 242, 226, 219, 0, 88, 101, 49, 185, 39, 82, 58, 120, 105, 189, 160, 244, 36, 252, 128, 249, 169, 146, 25, 140, 217, 147, 57, 116, 131, 179, 70, 154, 105, 137, 222, 70, 130, 185, 186, 104, 160, 95, 213, 143, 75, 118, 255, 50, 140, 5, 178, 53, 122, 73, 116, 85, 111, 186, 186, 142, 38, 13, 200, 26, 113, 186, 46, 78, 55, 9, 174, 149, 220, 12, 16, 211, 182, 109, 213, 162, 165, 39, 210, 167, 201, 232, 48, 9, 144, 59, 127, 126, 123, 31, 216, 223, 68, 148, 15, 191, 209, 32, 225, 172, 10, 59, 164, 149, 27, 234, 86, 171, 1, 210 } });
        }
    }
}
